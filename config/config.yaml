job:
  name: "redis"
  datacenters: ["dc1"]
  type: "service" # type from pack.yaml, default "service"

  # constraint:
  #   attribute: "${attr.kernel.name}"
  #   value: "linux"

  update:
    max_parallel: 1
    min_healthy_time: "10s"
    healthy_deadline: "3m"
    progress_deadline: "10m"
    auto_revert: false
    canary: 0

  migrate:
    max_parallel: 1
    health_check: "checks"
    min_healthy_time: "10s"
    healthy_deadline: "5m"

  group:
    - name: "cache"
      count: 1

      # Example for use volume
      # volume: 
      #   - name:  "example_volume_1" 
      #     type: "csi"
      #     source: "example_volume_1"
      #     read_only: false
      #     attachment_mode: "file-system"
      #     access_mode: "multi-node-multi-writer"
      #   - name:  "example_volume_2" 
      #     type: "csi"
      #     source: "example_volume_2"
      #     read_only: false
      #     attachment_mode: "file-system"
      #     access_mode: "multi-node-multi-writer"

      network:
        mode: "bridge"
        port:
          # - name: "db_example_1"
          #   static: 80
          #   to: 80
          # - name: "db_example_2"
          - name: "db"
            to: 6479

      scaling:
        enabled: true
        min: 1
        max: 6

      service:
        - name: "redis-cache"
          # provider: "nomad"  #(optional)
          port: "db"
          tags: ["nginx"]

          # check:
          #   - name: "alive"
          #     type: "http"
          #     path: "/"
          #     interval: "10s"
          #     timeout: "2s"

          # Example for use connect function:
          # connect:
          #   open_sidecar_service: true

          # connect:
          #   sidecar_service:
          #     proxy:
          #       upstreams:
          #         destination_name: "some_service"
          #         local_bind_port: <<service_port>

      restart:
        attempts: 2
        interval: "30m"
        delay: "15s"
        mode: "fail"

      ephemeral_disk:
        size: 300

      task:
        - name: "redis"
          driver: "docker"
          config:
            image: "redis:7"
            # force_pull: true
            ports: ["db"]
            volumes:
              - "custom_path:/custom_path_in_container"

          # volume_mount:
          #   - volume: "example_volume_1"
          #     destination: "/path/in/container"
          #   - volume: "example_volume_2"
          #     destination: "/path/in/container"

          # Example for use template. You need create file in folder 
          # files. Paste template in file. And use example bellow 
          # for use template in task.
          # template:
          #   - name: "load_balancer"
          #     file: "load_balancer.conf"
          #     destination: "local/load_balancer.conf"
          #     change_mode: "signal"
          #     change_signal: "SIGHUP"

          env:
            ENV: "FOO"

          resources:
            cpu: 1000
            memory: 1000